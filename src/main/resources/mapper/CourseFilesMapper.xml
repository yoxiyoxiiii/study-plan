<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swust.mapper.CourseFilesMapper">
  <resultMap id="BaseResultMap" type="com.swust.domain.CourseFiles">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="files_path" jdbcType="VARCHAR" property="filesPath" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="typeId" jdbcType="BIT" property="typeid" />
    <result column="c_id" jdbcType="INTEGER" property="cId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, files_path, typeId, c_id,description
  </sql>
  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_files
    where id = #{id}
  </select>
  
   <select id="findByPage" parameterType="com.swust.com.swust.base.PageInfo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_files
   	<where>
   		<foreach  collection="params" item="id">   
            c_id = #{id}  
        </foreach>  
   	</where>
  </select>
   <select id="findPage" parameterType="com.swust.com.swust.base.PageInfo" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_files
   	<where>
   		<foreach  collection="params" item="id">   
            c_id = #{id}  
        </foreach>  
   	</where>
  </select>
  
  
  <select id="findByUpId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   SELECT 
    <include refid="Base_Column_List" />
    from course_files 
    where c_id = #{c_id} and typeId = 1;
  </select>
  
  
  
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from course_files
    where id = #{id,jdbcType=INTEGER}
  </delete>
  

  <insert id="save" parameterType="com.swust.domain.CourseFiles">
    insert into course_files (id, files_path, typeId, 
      c_id)
    values (#{id,jdbcType=INTEGER}, #{filesPath,jdbcType=VARCHAR}, #{typeid,jdbcType=BIT}, 
      #{cId,jdbcType=INTEGER})
  </insert>
 
  <update id="update" parameterType="com.swust.domain.CourseFiles">
    update course_files
    <set>
      <if test="filesPath != null">
        filesPath = #{filesPath,jdbcType=VARCHAR},
      </if>
      <if test="cId != null">
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
       <if test="description != null">
        typeId = #{description}
      </if>
      
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
 
</mapper>