<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swust.mapper.CourseProcessMapper">
  <resultMap id="BaseResultMap" type="com.swust.domain.CourseProcess">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pid, cid, uid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_process
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_process
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.swust.domain.CourseProcess">
    insert into course_process (id, pid, cid, 
      uid)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.swust.domain.CourseProcess">
    insert into course_process
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.swust.domain.CourseProcess">
    update course_process
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.swust.domain.CourseProcess">
    update course_process
    set pid = #{pid,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.swust.domain.CourseProcess">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, pid, cid
  </sql>
  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_process
    where id = #{id,jdbcType=INTEGER}
  </select>


  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from course_process
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <insert id="save" parameterType="com.swust.domain.CourseProcess">
    insert into course_process (id, pid, cid)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER})
  </insert>


  <update id="update" parameterType="com.swust.domain.CourseProcess">
    update course_process
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>